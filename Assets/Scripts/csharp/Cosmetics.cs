// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmetics/cosmetics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pandora.Messages {

  /// <summary>Holder for reflection information generated from cosmetics/cosmetics.proto</summary>
  public static partial class CosmeticsReflection {

    #region Descriptor
    /// <summary>File descriptor for cosmetics/cosmetics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CosmeticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chljb3NtZXRpY3MvY29zbWV0aWNzLnByb3RvEhBwYW5kb3JhLm1lc3NhZ2Vz",
            "Ih0KB05hbWVUYWcSEgoKbmFtZXRhZ19pZBgBIAEoCSI3CglDb3NtZXRpY3MS",
            "KgoHbmFtZXRhZxgBIAEoCzIZLnBhbmRvcmEubWVzc2FnZXMuTmFtZVRhZ2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pandora.Messages.NameTag), global::Pandora.Messages.NameTag.Parser, new[]{ "NametagId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pandora.Messages.Cosmetics), global::Pandora.Messages.Cosmetics.Parser, new[]{ "Nametag" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NameTag : pb::IMessage<NameTag> {
    private static readonly pb::MessageParser<NameTag> _parser = new pb::MessageParser<NameTag>(() => new NameTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NameTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pandora.Messages.CosmeticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameTag(NameTag other) : this() {
      nametagId_ = other.nametagId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameTag Clone() {
      return new NameTag(this);
    }

    /// <summary>Field number for the "nametag_id" field.</summary>
    public const int NametagIdFieldNumber = 1;
    private string nametagId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NametagId {
      get { return nametagId_; }
      set {
        nametagId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NameTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NameTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NametagId != other.NametagId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NametagId.Length != 0) hash ^= NametagId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NametagId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NametagId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NametagId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NametagId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NameTag other) {
      if (other == null) {
        return;
      }
      if (other.NametagId.Length != 0) {
        NametagId = other.NametagId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NametagId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Cosmetics : pb::IMessage<Cosmetics> {
    private static readonly pb::MessageParser<Cosmetics> _parser = new pb::MessageParser<Cosmetics>(() => new Cosmetics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cosmetics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pandora.Messages.CosmeticsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cosmetics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cosmetics(Cosmetics other) : this() {
      nametag_ = other.nametag_ != null ? other.nametag_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cosmetics Clone() {
      return new Cosmetics(this);
    }

    /// <summary>Field number for the "nametag" field.</summary>
    public const int NametagFieldNumber = 1;
    private global::Pandora.Messages.NameTag nametag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pandora.Messages.NameTag Nametag {
      get { return nametag_; }
      set {
        nametag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cosmetics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cosmetics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nametag, other.Nametag)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nametag_ != null) hash ^= Nametag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (nametag_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Nametag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nametag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nametag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cosmetics other) {
      if (other == null) {
        return;
      }
      if (other.nametag_ != null) {
        if (nametag_ == null) {
          nametag_ = new global::Pandora.Messages.NameTag();
        }
        Nametag.MergeFrom(other.Nametag);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nametag_ == null) {
              nametag_ = new global::Pandora.Messages.NameTag();
            }
            input.ReadMessage(nametag_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
